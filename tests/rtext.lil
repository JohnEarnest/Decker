
# test suite for the rtext interface

rt1:insert font arg text pat with
 "menu" "" "Hello"       1
 ""     "" "how about "  1
 "mono" "" "some"        1
 ""     "" " salsa?"     1
end
rt2:insert text arg font with
 " never " ""               ""
 "mind."   "the_brain_page" ""
end

show[rtext.end]
show[rtext.len[rt1]]
show[rtext.len[table ()]]
show[rtext.make["simple"]]
show[rtext.make["more" "menu" 23]]
show[rtext.make["pink" "" "" 36]]

show[rtext.get[rt1  6]]
show[rtext.get[rt1 18]]
show[rtext.get[rt1 -5]]
show[rtext.get[rt1 1000]]

show[rtext.index[]]                       # bogus args 1
show[rtext.index["one\ntwo\nthree"     ]] # bogus args 2
show[rtext.index["one\ntwo\nthree" 1,0 ]] # line number
show[rtext.index["one\ntwo\nthree" 2,1 ]] # line, column
show[rtext.index["one\ntwo\nthree" 4,0 ]] # pos clamp line number
show[rtext.index["one\ntwo\nthree" -4,0]] # neg clamp line number
show[rtext.index["one\ntwo\nthree" 1,6 ]] # pos clamp row number
show[rtext.index["one\ntwo\nthree" 2,-5]] # neg clamp row number

show[rtext.cat[insert text with "single" end]]# cast
show[rtext.cat[rt1 rt2]]                      # catenate
show[rtext.cat["one" rt2 "another"]]          # catenate w/ strings
show[rtext.cat[image[3,4]]]                   # cast to inline image
show[rtext.cat[insert text pat with "a" -1 "b" 5 "c" 256 end]] # clamp bogus patterns

show[rtext.string[rt1 4,19]]
show[rtext.span[rt1 8,12]]                   # onechunk
show[rtext.span[rt1 4,19]]                   # multichunk
show[rtext.span[rtext.make[""] 0,0        ]] # empty start
show[rtext.span[rtext.make[""] 0,rtext.end]] # empty end

d1:rtext.cat[
	rtext.make["first|"       "f0"]
	rtext.make["second|third" "f1"]
	rtext.make["|fourth"      "f2"]
]
d2:rtext.cat[
	rtext.make["first one\n\nsecond" "f1"]
	rtext.make[" one"                "f2"]
	rtext.make["\n\nthird one\n\n"   "f3"]
]
show[rtext.split[]]
show[rtext.split["bogus"]]
show[rtext.split["" d1]]
show[first rtext.split["not present" d1]]
print["--d1--"] each v in rtext.split["|" d1] show[v] end
print["--d2--"] each v in rtext.split["\n\n" d2] show[v] end

norm:select text font arg pat from rt1
show[rt1~rtext.replace[rt1]]                             # bogus args
show[rtext.cat[rt1]~rtext.replace[rt1 "" "NEVER"]]       # empty key
show[norm~rtext.replace[rt1 "bogus" "AAAAAAAA"]]         # no matches
show[rtext.replace[rt1 "salsa" "pineapple"]]             # simple a->b
show[rtext.replace[rt1 "sa?" "{C}"]]                     # trailing replacement
show[rtext.replace[rt1 "l" "{L}"]]                       # adjacent replacement
show[rtext.replace[rt1 ("Hello","about") "?!?"]]         # multiple keys, one value
show[rtext.replace[rt1 ("Hello","about") ("{A}","{B}")]] # multiple keys, multiple values
show[rtext.replace[rt1 "about" rtext.make["ABOUT" "menu" "http://about.com"]]] # rtext replacement
show[rtext.replace["Some some somE none" "some" "Q" 1]]  # case-insensitive

show[rtext.find[]]                                        # bogus args 1
show[rtext.find[rt1]]                                     # bogus args 2
show[rtext.find["ABC" ""]]                                # empty key
show[rtext.find[rt1 "how"]]                               # find word
show[rtext.find["one two one one" "one"]]                 # find words
show[rtext.find["one two three" "nope"]]                  # no match
show[rtext.find["eye\nbee\nsea" "\n"]]                    # find newlines
show[rtext.find["one two one three one" ("two","three")]] # multiple keys
show[rtext.find["one a two A A three a" "a" 0]]           # case-sensitive
show[rtext.find["one a two A A three a" "a" 1]]           # case-insensitive
show[rtext.find["aaaaaa" "aaa"]]                          # matches don't overlap
